import os, sys

env = WengoGetEnvironment()

cc_flags = []
link_flags = []
#It does not build without -pthread on some GNU/Linux distros (e.g Debian Sarge)
if WengoOSLinux():
	cc_flags += ['-pthread']
	link_flags += ['-pthread']

BOOSTVER='1_33_1'
libs = []
if WengoCCGCC() and not WengoOSWindows():
	conf = Configure(env)
	if conf.CheckLib('boost_thread-gcc-mt'):
		libs += [
			'boost_thread-gcc-mt',
			'boost_serialization-gcc-mt',
			'boost_signals-gcc-mt'
		]
	else:
		libs += [
			'boost_thread',
			'boost_serialization',
			'boost_signals'
		]
	env = conf.Finish()
if WengoCCMSVC():
	libs += [
		'libboost_thread-vc71-mt.lib',
		'libboost_serialization-vc71-mt.lib',
		'libboost_signals-vc71-mt.lib'
	]		

if WengoCCMinGW():
	libs += [
		'libboost_thread-mgw-mt',
		'libboost_serialization-mgw-mt',
		'libboost_signals-mgw-mt'
	]

lib_path = []
include_path = []
if WengoOSWindows():
	lib_path += ['C:\\Boost\\lib']
	include_path += ['C:\\Boost\\include\\boost-' + BOOSTVER]
if WengoOSMacOSX():
	#Installed from source code
	if os.path.exists(os.environ['BOOSTINCLUDEDIR']) and os.path.exists(os.environ['BOOSTLIBDIR']):
		include_path += [os.environ['BOOSTINCLUDEDIR']]
		lib_path += [os.environ['BOOSTLIBDIR']]
		print "libpath :" + str(lib_path)
		print "include path :" + str(include_path)
		libs += [
                        'boost_thread',
                        'boost_serialization',
                        'boost_signals'
                ]
	
	#Installed with Darwinports
	elif os.path.exists('/opt/local/include/') and os.path.exists('/opt/local/lib'):
		include_path += ['/opt/local/include']
		lib_path += ['/opt/local/lib']
	else:
		print 'Boost library not found'
		sys.exit(1)

if WengoOSLinux():
	if os.path.exists('/usr/local/include/boost-' + BOOSTVER):
		include_path += ['/usr/local/include/boost-' + BOOSTVER]
		lib_path += ['/usr/local/lib']
		cc_flags += ['-pthread']

defines = {}
headers = []
sources = []

env.WengoAddLibPath(lib_path)
env.WengoAddCCFlags(cc_flags)
env.WengoAddLinkFlags(link_flags)
env.WengoAddIncludePath(include_path)
env.WengoAddDefines(defines)
env.WengoUseLibraries(libs)
env.WengoDeclareSystemLibrary('boost')
