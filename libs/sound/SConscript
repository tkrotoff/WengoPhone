env = WengoGetEnvironment()
link_flags = []
libs = [
	'owthread',
]
lib_path = []
include_path = [
	'include'
]
defines = {}
headers = []
sources = []
cc_flags = []

if WengoOSWindows():
	sources += [
		'src/win32/Sound.cpp',
		'src/win32/VolumeControl.cpp',
		'src/win32/SoundMixerException.cpp',
		'src/win32/Win32VolumeControl.cpp',
		'src/win32/SoundThread.cpp',
		'src/win32/playsound/SoundFile.cpp',
		'src/win32/playsound/PlaySoundFile.cpp'
	]
	libs += ['winmm', 'advapi32']

elif WengoOSLinux():
	sources += [
		'src/unix/Sound.cpp',
		'src/unix/SoundMixer.cpp',
		'src/unix/SoundMixerException.cpp',
		'src/unix/Volume.cpp'
	]
	libs += ['qt4']

elif WengoOSMacOSX():
	sources += [
		'src/mac/AudioDevice.cpp',
		'src/mac/Sound.cpp',
		'src/mac/SoundPrivateMac.cpp',
		'src/mac/SoundMixer.cpp',
		'src/mac/SoundMixerException.cpp',
		'src/mac/CoreAudioUtilities.cpp',
		'src/mac/Volume.cpp',
	]

	link_flags += [
		'-framework CoreAudio',
		'-framework Cocoa',
	]

	cc_flags += ['-x objective-c++']

if WengoGetConsoleArgument('enable-libsound-portaudio'):
	sources += ['src/portaudio/AudioDevice.cpp']
	libs += ['portaudio']
elif WengoOSWindows():
	sources += ['src/win32/AudioDevice.cpp']
elif WengoOSLinux():
	sources += ['src/unix/AudioDevice.cpp']
	libs += ['portaudio']

env.WengoAddIncludePath(include_path)
env.WengoAddDefines(defines)
env.WengoAddCCFlags(cc_flags)
env.WengoAddLinkFlags(link_flags)
env.WengoUseLibraries(libs)

env.WengoStaticLibrary('owsound', sources)
