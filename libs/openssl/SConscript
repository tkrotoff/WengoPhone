env = WengoGetEnvironment()

libs = []
lib_path = []
include_path = []
defines = {}

if WengoOSWindows():
	include_path += [
		'inc32/openssl',
		'inc32',
	]

	if WengoCCMSVC():
		libs += [
			'libeay32',
			'ssleay32',
		]
		lib_path += ['out32/msvc']

	elif WengoCCMinGW():
		libs += [
			'ssl',
			'crypto',
		]
		lib_path += ['out32/mingw']

else:
	libs += [
		'ssl',
		'crypto',
	]

env.WengoAddIncludePath(include_path)
env.WengoAddLibPath(lib_path)
env.WengoAddDefines(defines)
env.WengoUseLibraries(libs)

if WengoOSWindows():
	if WengoCCMSVC():
		env.WengoDeclareLibrary('openssl', ['out32/msvc/libeay32.lib', 'out32/msvc/ssleay32.lib'])
		print env['LIBS']
		#env['LIBS'].remove('openssl')
	elif WengoCCMinGW():
		env.WengoDeclareLibrary('openssl', ['out32/mingw/libcrypto.a', 'out32/mingw/libssl.a'])
		print env['LIBS']
		#env['LIBS'].remove('openssl')
else:
	env.WengoDeclareSystemLibrary('openssl')
