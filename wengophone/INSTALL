WengoPhoneNG is developed under Windows using MS Visual C++ 7.1 (bundled with Visual Studio 2003)
and the commercial version of Qt 4.0.
It has also been quickly tested with:
- under Windows (MinGW + Qt 4.0 Open Source Edition GNU GPL)
- under MacOSX (GCC)
- under Linux (GCC)
These platforms may not work all the time.
Be aware that WengoPhoneNG is at a very early stage of development!

Libraries needed for WengoPhoneNG:

Model and Control components: (target libwengophone-ng)
 * Boost libraries 1.33.0 (thread, serialization and unit test framework)
 * util-ng -> depends on wengocurl (libs/curl) for HTTP requests
 * TinyXML
 * glib2 (needed only under UNIX including Linux and MacOS X platforms, not under Windows)
 * libidn

Presentation component: (target qtwengophone-ng)
 * Qt library version 4.0
 * qtutil

Thus you need first to install Boost.
Then you need to install glib if you are not under Windows.
On Linux this is already installed, under MacOS X you must install it.
The easiest way is to use Fink (http://fink.sf.net) or Darwinports
(http://darwinports.opendarwin.org).
With Fink, type "fink install glib2-dev", with Darwinports "port install glib2".

util-ng is inside the directory libs/util-ng.
TinyXML is inside the directory libs/tinyxml.
wengocurl is inside the directory libs/curl. 

Warning :

At the moment, you need to change line 58 of libs/curl/include/curl/curl.h from :
#define CURL_EXTERN  __declspec(dllimport)
to :
#define CURL_EXTERN  

For the presentation component, Qt 4.0 needs to be install.
qtutil is inside the directory libs/qtutil.

For the compilation process you need to install SCons (0.96.1) and Python.
Once this is done go to the root directory of the svn repository
and run the command:
'scons -f SConstruct.ng phapiwrapper=1 qtwengophone-ng'

This will compile everything in order to generate qtwengophone.exe:
- libutil-ng
- wengocurl
- TinyXML
- libqtutil
- phapi
- WengoPhoneNG with a Qt 4.0 interface

If you prefer sipX for the SIP stack:
'scons -f SConstruct.ng sipxwrapper=1 qtwengophone-ng'

If you don't want a SIP stack but just libwengophone-ng + qtwengophone-ng:
'scons -f SConstruct.ng qtwengophone-ng'
It will use nullsipwrapper rather than phapiwrapper or sipxwrapper


The target qtwengophone-ng is subdivided into several targets:
- libwengophone-ng (Model and Control components)
- qtwengophone-ng (Presentation component)
- phapiwrapper (phApi SIP implementation)
- sipxwrapper (sipX SIP implementation)
- nullsipwrapper (Null SIP implementation)

Check the SConscript.ng files inside the directory softphone-ng
