import os

env = WengoGetQt4Environment()

libs = [
	'wengophone',
	'buildId',
	'qtutil',
	'webcam',
	'qt4',
	'owbrowser',
	'trayicon',
	'softupdater',
]
if WengoCCMSVC():
	libs.append('owmemorydump')

if WengoOSMacOSX():
	libs += ['glib-2.0', 'gthread-2.0']
lib_path = []
include_path = []
defines = {}
link_flags = []
headers = [
	'QtWengoPhone.h',
	'QtConfigPanel.h',
	'QtDialpad.h',
	'QtAbout.h',
	'QtHttpProxyLogin.h',
	'phoneline/QtPhoneLine.h',
	'phonecall/QtPhoneCall.h',
	'phonecall/QtVideo.h',
	'phonecall/QtContactCallList.h',
	'phonecall/QtContactCallListWidget.h',
	'phonecall/QtPhoneCallEventFilter.h',
	'toaster/QtToaster.h',
	'login/QtLogin.h',
	'login/QtEditMyProfile.h',
	'login/QtEditContactProfile.h',
	'imaccount/QtIMAccountItem.h',
	'imaccount/QtIMAccountManager.h',
	'imaccount/QtIMAccountSettings.h',
	'imaccount/QtIMAccountPlugin.h',
	'imaccount/QtMSNSettings.h',
	'imaccount/QtYahooSettings.h',
	'imaccount/QtAIMSettings.h',
	'imaccount/QtJabberSettings.h',
	'imaccount/QtGoogleTalkSettings.h',
	'contactlist/QtContactWidget.h',
	'contactlist/QtContactList.h',
	'contactlist/QtAddContact.h',
	'contactlist/ContactPopupMenu.h',
	'contactlist/QtUserWidget.h',
	'contactlist/UserTreeEventManager.h',
	'contactlist/QtUserManager.h',
	'contactlist/QtUserList.h',
	'contactlist/QtUser.h',
	'contactlist/QtTreeViewDelegate.h',
	'contactlist/QtContactPixmap.h',
	'contactlist/QtUserWidgetEventFilter.h',
	'contactlist/QtUserWidgetAvatarManager.h',
	'contactlist/QtHidenContact.h',
	'presence/QtPresenceHandler.h',
	'chat/QtChatHandler.h',
	'chat/QtChatWidget.h',
	'chat/QtChatWindow.h',
	'chat/QtEmoticonsWidget.h',
	'chat/widgetseeker.h',
	'chat/QtEmoticon.h',
	'chat/QtEmoticonButton.h',
	'chat/chatwidgetmanager.h',
	'chat/QtChatTabWidget.h',
	'chat/QtChatRoomInviteDlg.h',
	'chat/QtChatRoomTreeWidgetItem.h',
	'chat/QtChatRoomListWidgetItem.h',
	'chat/QtChatContactWidget.h',
	'webservices/sms/QtSms.h',
	'webservices/softupdate/QtSoftUpdate.h',
	'callbar/QtCallBar.h',
	'statusbar/QtStatusBar.h',
	'config/QtAdvancedConfig.h',
	'config/QtAccountSettings.h',
	'config/QtAdvancedSettings.h',
	'config/QtAudioSettings.h',
	'config/QtCallForwardSettings.h',
	'config/QtGeneralSettings.h',
	'config/QtNotificationSettings.h',
	'config/QtPrivacySettings.h',
	'config/QtVideoSettings.h',
	'config/QtLanguagesSettings.h',
	'config/QtWengoConfigDialog.h',
	'profilebar/QtEventWidget.h',
	'profilebar/QtNickNameWidget.h',
	'profilebar/QtProfileBar.h',
	'profilebar/QtClickableLabel.h',
	'profilebar/QtCreditWidget.h',
	'profilebar/QtProfileLabel.h',
	'history/QtHistoryWidget.h',
	'history/QtHistoryItem.h',
	'history/QtHistory.h',
	'webservices/subscribe/QtSubscribe.h'
]

sources = [
	'../main.cpp',
	'QtWengoPhone.cpp',
	'QtConfigPanel.cpp',
	'QtDialpad.cpp',
	'QtAbout.cpp',
	'QtHttpProxyLogin.cpp',
	'phoneline/QtPhoneLine.cpp',
	'phonecall/QtPhoneCall.cpp',
	'phonecall/QtVideo.cpp',
	'phonecall/QtContactCallList.cpp',
	'phonecall/QtContactCallListWidget.cpp',
	'phonecall/QtPhoneCallEventFilter.cpp',
	'toaster/QtToaster.cpp',
	'login/QtLogin.cpp',
	'login/QtEditMyProfile.cpp',
	'login/QtEditContactProfile.cpp',
	'login/QtIMContactDetails.cpp',
	'login/QtAddIMContact.cpp',
	'imaccount/QtIMAccountItem.cpp',
	'imaccount/QtIMAccountManager.cpp',
	'imaccount/QtIMAccountSettings.cpp',
	'imaccount/QtIMAccountPlugin.cpp',
	'imaccount/QtMSNSettings.cpp',
	'imaccount/QtYahooSettings.cpp',
	'imaccount/QtAIMSettings.cpp',
	'imaccount/QtJabberSettings.cpp',
	'imaccount/QtGoogleTalkSettings.cpp',
	'wenbox/QtWenboxPlugin.cpp',
	'contactlist/QtContact.cpp',
	'contactlist/QtContactWidget.cpp',
	'contactlist/QtContactList.cpp',
	'contactlist/QtContactGroup.cpp',
	'contactlist/QtAddContact.cpp',
	'contactlist/ContactPopupMenu.cpp',
	'contactlist/ContactGroupPopupMenu.cpp',
	'contactlist/QtUserWidget.cpp',
	'contactlist/UserTreeEventManager.cpp',
	'contactlist/QtUserManager.cpp',
	'contactlist/QtUserList.cpp',
	'contactlist/QtUser.cpp',
	'contactlist/QtTreeViewDelegate.cpp',
	'contactlist/QtContactPixmap.cpp',
	'contactlist/QtUserWidgetEventFilter.cpp',
	'contactlist/QtUserWidgetAvatarManager.cpp',
	'contactlist/QtHidenContact.cpp',
	'presence/QtPresenceHandler.cpp',
	'chat/QtChatHandler.cpp',
	'chat/QtChatWidget.cpp',
	'chat/chatwidgetmanager.cpp',
	'chat/QtChatWindow.cpp',
	'chat/QtEmoticonsWidget.cpp',
	'chat/widgetseeker.cpp',
	'chat/QtEmoticon.cpp',
	'chat/QtEmoticonButton.cpp',
	'chat/QtChatTabWidget.cpp',
	'chat/QtChatRoomInviteDlg.cpp',
	'chat/QtChatRoomTreeWidgetItem.cpp',
	'chat/QtChatRoomListWidgetItem.cpp',
	'chat/QtChatContactWidget.cpp',
	'webservices/sms/QtSms.cpp',
	'webservices/softupdate/QtSoftUpdate.cpp',
	'callbar/QtCallBar.cpp',
	'statusbar/QtStatusBar.cpp',
	'config/QtAdvancedConfig.cpp',
	'config/QtAccountSettings.cpp',
	'config/QtAdvancedSettings.cpp',
	'config/QtAudioSettings.cpp',
	'config/QtCallForwardSettings.cpp',
	'config/QtGeneralSettings.cpp',
	'config/QtNotificationSettings.cpp',
	'config/QtPrivacySettings.cpp',
	'config/QtVideoSettings.cpp',
	'config/QtLanguagesSettings.cpp',
	'config/QtWengoConfigDialog.cpp',
	'profilebar/QtEventWidget.cpp',
	'profilebar/QtNickNameWidget.cpp',
	'profilebar/QtProfileBar.cpp',
	'profilebar/QtClickableLabel.cpp',
	'profilebar/QtCreditWidget.cpp',
	'profilebar/QtIMMenu.cpp',
	'profilebar/QtProfileLabel.cpp',
	'history/QtHistoryWidget.cpp',
	'history/QtHistoryItem.cpp',
	'history/QtHistory.cpp',
	'webservices/subscribe/QtSubscribe.cpp',
	env.WengoCompileQt4Resource('wengophone.qrc'),
]

forms = [
	'WengoPhoneWindow.ui',
	'WengoPhoneWindowConfigPanel.ui',
	'AboutWindow.ui',
	'HttpProxyLoginWindow.ui',
	'imaccount/IMAccountTemplate.ui',
	'login/ContactDetails.ui',
	'login/IMContactDetails.ui',
	'login/AddIMContactDialog.ui',
]

for form in forms:
	header = env.WengoCompileQt4UiFile(form)
	headers += [ header ]

if WengoOSWindows() and WengoCCMSVC():
	sources.append(WengoGetEnvironment().WengoCompileWindowsResource('win32/wengophone.rc'))

if WengoGetConsoleArgument('sipxwrapper'):
	defines['SIPXWRAPPER'] = 1
	libs += ['sipxwrapper']

elif WengoGetConsoleArgument('phapiwrapper'):
	defines['PHAPIWRAPPER'] = 1
	libs += ['phapiwrapper']

elif WengoGetConsoleArgument('multiimwrapper'):
	defines['MULTIIMWRAPPER'] = 1
	libs += [
		'multiimwrapper',
	]

else:
	libs += ['nullsipwrapper']

if WengoOSMacOSX():
	link_flags += [
		'-framework CoreAudio',
		'-framework AudioToolbox',
		'-framework AudioUnit',
		'-framework Cocoa',
	]

	env.WengoDeclareMacOSXAppTemplate('./macosx/template.app')

if WengoOSLinux():
	x11_lib_dir = '/usr/X11R6/lib'
	if os.environ.has_key('X11R6LIBDIR'):
		x11_lib_dir = os.environ['X11R6LIBDIR']
	link_flags += [
		'-L' + x11_lib_dir,
	]
	libs += ['SM', 'ICE', 'Xi', 'Xinerama', 'Xext', 'X11', 'Xrandr',]

env.WengoCopyToBuildDir('chat/emoticons', 'emoticons')
env.WengoCopyToBuildDir('webpages', 'webpages')
env.WengoAddDefines(defines)
env.WengoAddLinkFlags(link_flags)
env.WengoUseLibraries(libs)
qtwengophone_program = env.WengoProgram('qtwengophone', sources, headers)
env.WengoAlias("qtwengophone_alias", qtwengophone_program)