env = WengoGetQt4Environment()

libs = [
	'wengophone',
	'buildId',
	'qtutil',
	'webcam',
	'qt4',
	'owmemorydump',
	'owbrowser',
	'trayicon'
]
if WengoOSMacOSX():
	libs += ['glib-2.0', 'gthread-2.0']
lib_path = []
include_path = []
defines = {}
link_flags = []
headers = [
	'QtWengoPhone.h',
	'QtLogger.h',
	'QtDialpad.h',
	'QtAbout.h',
	'QtLogger.h',
	'QtHttpProxyLogin.h',
	'phoneline/QtPhoneLine.h',
	'phonecall/QtPhoneCall.h',
	'phonecall/QtVideo.h',
	'login/QtLogin.h',
	'login/QtSetLogin.h',
	'login/QtEditMyProfile.h',
	'login/QtEditContactProfile.h',
	'contactlist/TreeModel.h',
	'contactlist/QtContactWidget.h',
	'contactlist/QtContactList.h',
	'contactlist/QtAddContact.h',
	'contactlist/ContactPopupMenu.h',
	'contactlist/QtUserWidget.h',
	'contactlist/UserTreeEventManager.h',
	'contactlist/QtUserManager.h',
	'contactlist/QtUserList.h',
	'contactlist/QtUser.h',
	'contactlist/QtTreeViewDelegate.h',
	'contactlist/QtContactPixmap.h',
	'contactlist/QtUserWidgetEventFilter.h',
	'contactlist/QtUserWidgetAvatarManager.h',
	'presence/QtPresenceHandler.h',
	'chat/QtChatHandler.h',
	'chat/QtChatWidget.h',
	'chat/QtChatWindow.h',
	'chat/QtEmoticonsWidget.h',
	'chat/widgetseeker.h',
	'chat/QtEmoticon.h',
	'chat/QtEmoticonButton.h',
	'chat/chatwidgetmanager.h',
	'sms/QtSms.h',
	'config/QtAdvancedConfig.h',
	'config/QtAccountSettings.h',
	'config/QtAdvancedSettings.h',
	'config/QtAudioSettings.h',
	'config/QtCallForwardSettings.h',
	'config/QtGeneralSettings.h',
	'config/QtNotificationSettings.h',
	'config/QtPrivacySettings.h',
	'config/QtProtocolSettings.h',
	'config/QtVideoSettings.h',
	'config/QtWengoConfigDialog.h',
	'statusbar/QtEventWidget.h',
	'statusbar/QtNickNameWidget.h',
	'statusbar/QtStatusBar.h',
	'statusbar/QtClickableLabel.h',
	'statusbar/QtCreditWidget.h'
]

sources = [
	'../main.cpp',
	'QtWengoPhone.cpp',
	'QtDialpad.cpp',
	'QtAbout.cpp',
	'QtLogger.cpp',
	'QtHttpProxyLogin.cpp',
	'phoneline/QtPhoneLine.cpp',
	'phonecall/QtPhoneCall.cpp',
	'phonecall/QtVideo.cpp',
	'login/QtLogin.cpp',
	'login/QtSetLogin.cpp',
	'login/QtEditMyProfile.cpp',
	'login/QtEditContactProfile.cpp',
	'wenbox/QtWenboxPlugin.cpp',
	'contactlist/QtContact.cpp',
	'contactlist/QtContactWidget.cpp',
	'contactlist/QtContactList.cpp',
	'contactlist/QtContactGroup.cpp',
	'contactlist/QtAddContact.cpp',
	'contactlist/ContactPopupMenu.cpp',
	'contactlist/ContactGroupPopupMenu.cpp',
	'contactlist/QtUserWidget.cpp',
	'contactlist/UserTreeEventManager.cpp',
	'contactlist/QtUserManager.cpp',
	'contactlist/QtUserList.cpp',
	'contactlist/QtUser.cpp',
	'contactlist/QtTreeViewDelegate.cpp',
	'contactlist/QtContactPixmap.cpp',
	'contactlist/QtUserWidgetEventFilter.cpp',
	'contactlist/QtUserWidgetAvatarManager.cpp',
	'presence/QtPresenceHandler.cpp',
	'chat/QtChatHandler.cpp',
	'chat/QtChatWidget.cpp',
	'chat/chatwidgetmanager.cpp',
	'chat/QtChatWindow.cpp',
	'chat/QtEmoticonsWidget.cpp',
	'chat/widgetseeker.cpp',
	'chat/QtEmoticon.cpp',
	'chat/QtEmoticonButton.cpp',
	'sms/QtSms.cpp',
	'config/QtAdvancedConfig.cpp',
	'config/QtAccountSettings.cpp',
	'config/QtAdvancedSettings.cpp',
	'config/QtAudioSettings.cpp',
	'config/QtCallForwardSettings.cpp',
	'config/QtGeneralSettings.cpp',
	'config/QtNotificationSettings.cpp',
	'config/QtPrivacySettings.cpp',
	'config/QtProtocolSettings.cpp',
	'config/QtVideoSettings.cpp',
	'config/QtWengoConfigDialog.cpp',
	'statusbar/QtEventWidget.cpp',
	'statusbar/QtNickNameWidget.cpp',
	'statusbar/QtStatusBar.cpp',
	'statusbar/QtClickableLabel.cpp',
	'statusbar/QtCreditWidget.cpp',

	env.WengoCompileQt4Resource('wengophone.qrc'),
]
if WengoOSWindows():
	sources.append(WengoGetEnvironment().WengoCompileWindowsResource('win32/wengophone.rc'))

if WengoGetConsoleArgument('sipxwrapper'):
	defines['SIPXWRAPPER'] = 1
	libs += ['sipxwrapper']
elif WengoGetConsoleArgument('phapiwrapper'):
	defines['PHAPIWRAPPER'] = 1
	libs += ['phapiwrapper']
elif WengoGetConsoleArgument('multiimwrapper'):
	defines['MULTIIMWRAPPER'] = 1
	libs += [
		'multiimwrapper',
	]
else:
	libs += ['nullsipwrapper']

if WengoOSMacOSX():
	link_flags += [
		'-framework CoreAudio',
		'-framework AudioToolbox',
		'-framework AudioUnit'
	]

	env.WengoDeclareMacOSXAppTemplate('./macosx/template.app')

env.WengoCopyToBuildDir('chat/emoticons', 'emoticons')
env.WengoCopyToBuildDir('webpages', 'webpages')
env.WengoAddDefines(defines)
env.WengoAddLinkFlags(link_flags)
env.WengoUseLibraries(libs)
env.WengoProgram('qtwengophone', sources, headers)
