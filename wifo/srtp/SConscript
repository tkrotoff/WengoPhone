env = WengoGetEnvironment()

env['WIN32_INSERT_DEF'] = 1

libs = []
lib_path = []
include_path = [
	'include',
	'crypto/include',
        'srtp'
]
defines = {
	'RTP_MAX_SIZE' : 8192
}

headers = [
        'srtp/crypto/include/aes.h',
        'srtp/crypto/include/aes_cbc.h',
        'srtp/crypto/include/aes_icm.h',
        'srtp/crypto/include/alloc.h',
        'srtp/crypto/include/auth.h',
        'srtp/crypto/include/cipher.h',
        'srtp/crypto/include/config.h',
        'srtp/crypto/include/crypto.h',
        'srtp/crypto/include/cryptoalg.h',
        'srtp/crypto/include/crypto_kernel.h',
        'srtp/crypto/include/crypto_types.h',
        'srtp/crypto/include/datatypes.h',
        'srtp/crypto/include/err.h',
        'srtp/crypto/include/hmac.h',
        'srtp/crypto/include/integers.h',
        'srtp/crypto/include/key.h',
        'srtp/crypto/include/null_auth.h',
        'srtp/crypto/include/null_cipher.h',
        'srtp/crypto/include/prng.h',
        'srtp/crypto/include/rand_source.h',
        'srtp/crypto/include/rdbx.h',
        'srtp/include/err.h',
        'srtp/include/rdb.h',
        'srtp/include/rdbx.h',
        'srtp/include/rtp.h',
        'srtp/include/srtp.h',
        'srtp/include/ut_sim.h'
]

sources = [
        'crypto/cipher/aes.c',
        'crypto/cipher/aes_cbc.c',
        'crypto/cipher/aes_icm.c',
        'crypto/cipher/cipher.c',
        'crypto/cipher/null_cipher.c',
        'crypto/hash/auth.c',
        'crypto/hash/hmac.c',
        'crypto/hash/null_auth.c',
        'crypto/hash/sha1.c',
        'crypto/replay/rdb.c',
        'crypto/replay/rdbx.c',
        'crypto/replay/ut_sim.c',
        'crypto/math/datatypes.c',
        'crypto/math/stat.c',
        'crypto/kernel/alloc.c',
        'crypto/kernel/crypto_kernel.c',
        'crypto/kernel/err.c',
        'crypto/kernel/key.c',
        'crypto/rng/ctr_prng.c',
        'crypto/rng/prng.c',
        'crypto/rng/rand_source.c',
	'srtp/srtp.c'
]

if WengoOSWindows():
	defines['WIN32'] = 1
	libs += ['ws2_32', 'winmm']

if WengoOSLinux() or WengoOSMacOSX():
	env.ParseConfig('pkg-config --cflags')

env.WengoAddIncludePath(include_path)
env.WengoAddDefines(defines)
env.WengoUseLibraries(libs)
env.WengoAddDoxyfile()

env.WengoStaticLibrary('srtp', sources)
