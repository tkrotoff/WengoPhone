env = WengoGetEnvironment()

defines = {}

libs = [
	'owthread',
	'owutil',
	'pixertool',
]

link_flags = [
]

include_path = [
	'include'
]

headers = [
	'include/WebcamDriver.h',
	'include/WebcamDriverFactory.h',
	'include/webcam.h',
	'include/IWebcamDriver.h',
	'include/NullWebcamDriverFactory.h',
	'include/DefaultWebcamDriverFactory.h',
]

sources = [
	'src/WebcamDriver.cpp',
	'src/webcam.cpp',
	'src/null/NullWebcamDriver.cpp',
]

if WengoCCMSVC():
	headers += [
		'include/DirectXWebcamDriverFactory.h',
		'include/DirectXWebcamDriver.h',
		'include/DirectXWebcamUtils.h'
	]

	sources += [
		'src/directx/DirectXWebcamDriver.cpp',
		'src/directx/DirectXWebcamUtils.cpp'
	]

	libs += ["winmm", "strmiids", "comsupp"]

if WengoOSLinux():
	headers += [
		'include/V4LWebcamDriverFactory.h',
		'src/v4l/V4LWebcamDriver.h'
	]

	sources += [
		'src/v4l/V4LWebcamDriver.cpp'
	]

if WengoOSMacOSX():
	headers += [
		'include/QuicktimeWebcamDriverFactory.h',
		'src/quicktime/QuicktimeWebcamDriver.h'
	]

	sources += [
		'src/quicktime/QuicktimeWebcamDriver.cpp'
	]

env.WengoAddIncludePath(include_path)
env.WengoUseLibraries(libs)
if WengoGetConsoleArgument('enable-webcam-dll'):
	defines['WEBCAM_DLL'] = '1'
	defines['WEBCAM_BUILDING_DLL'] = '1'
	env.WengoAddDefines(defines)
	env.WengoSharedLibrary('webcam', sources, headers)
else:
	env.WengoAddDefines(defines)
	env.WengoStaticLibrary('webcam', sources, headers)

env.SConscript('tests/SConscript')
